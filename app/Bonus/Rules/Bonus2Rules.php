<?php

namespace App\Bonus\Rules;

use App\Models\Group;
use App\Models\Transaction;

class Bonus2Rules extends BonusRuleAbstract
{

    private $transaction;
    private $group;
    private $bonusN = 2;
    public $isBonusSuperior = false;

    public function __construct(Transaction $transaction, Group $group)
    {
        $this->transaction = $transaction;
        $this->group = $group;

        parent::__construct($transaction, $group, $this->bonusN);
    }

    public function isActive(): bool
    {
        if ($this->isBonusSuperior) {
            return $this->isActiveSuperior();
        }

        $col = "bonus" . $this->bonusN . "_status";
        if ($this->group->{$col} == 'active') {
            return true;
        }
        return false;
    }

    public function getTotalBonus()
    {


        if ($this->isBonusSuperior) {
            $valueSUPERIOR = $this->getLiquidTransactionAmount();
            $percentSUPERIOR = bcdiv($this->group->bonus2_percentual_superior_integer, '100.0');
            return bcmul($percentSUPERIOR, $valueSUPERIOR);
        }
        return parent::getTotalBonus(); // TODO: Change the autogenerated stub
    }

    private function isActiveSuperior(): bool
    {
        $col = "bonus" . $this->bonusN . "_status";
        if ($this->group->{$col} == 'active' && $this->group->bonus2_two_levels == 'active') {
            return true;
        }
        return false;
    }

}
